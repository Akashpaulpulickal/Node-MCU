# Import necessary libraries
import RPi.GPIO as GPIO
import time

# Set up GPIO mode
GPIO.setmode(GPIO.BCM)

# Define GPIO pins for ultrasonic sensor
TRIG = 23
ECHO = 24

# Set up ultrasonic sensor pins
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

def measure_distance():
    GPIO.output(TRIG, True)
    time.sleep(0.00001)
    GPIO.output(TRIG, False)
    start_time = time.time()
    stop_time = time.time()
    
    while GPIO.input(ECHO) == 0:
        start_time = time.time()
    
    while GPIO.input(ECHO) == 1:
        stop_time = time.time()
    
    time_elapsed = stop_time - start_time
    distance = (time_elapsed * 34300) / 2
    return distance

try:
    while True:
        distance = measure_distance()
        print(f"Distance: {distance:.2f} cm")
        time.sleep(1)

except KeyboardInterrupt:
    print("Program terminated")

finally:
    GPIO.cleanup()

# Connections:
# - VCC pin of the ultrasonic sensor to the 5V pin of the Raspberry Pi.
# - GND pin of the ultrasonic sensor to the GND pin of the Raspberry Pi.
# - TRIG pin of the ultrasonic sensor to GPIO pin 23 (BCM numbering) of the Raspberry Pi.
# - ECHO pin of the ultrasonic sensor to GPIO pin 24 (BCM numbering) of the Raspberry Pi.
